[
  {
    "id": "673bc8c73e1c053211ec07e5",
    "postId": "673bbcdcef018c61223e7ef4",
    "user": {
      "id": "c507f68e-88d8-4e47-9b92-2f7cb17673c7",
      "fullName": "Admin",
      "userName": "admin",
      "email": "admin@gmail.com",
      "roles": [
        "admin"
      ],
      "profilePictureUrl": "https://res.cloudinary.com/dpnh3ytfm/image/upload/v1731844682/anonymous_wgerg5.jpg",
      "profileUrl": null
    },
    "media": [
      {
        "publicId": "y1uuxohwykiwabngvpif",
        "url": "https://res.cloudinary.com/dpnh3ytfm/image/upload/v1731971267/y1uuxohwykiwabngvpif.jpg",
        "contentType": "image",
        "fileSize": 73363,
        "format": "jpg",
        "duration": null,
        "thumbnailUrl": null,
        "width": 500,
        "height": 749
      }
    ],
    "commentText": "For modern C# projects, prefer a is not null for null checks unless you have a specific reason to respect custom != operator overloads. It ensures clarity, avoids unintended behavior, and aligns with contemporary C# coding standards.",
    "likesCount": 0,
    "reactions": [],
    "parentCommentID": null,
    "createdAt": "2024-11-19T06:07:50.1340924+07:00",
    "modifiedAt": null,
    "isDeleted": false,
    "deletedAt": null
  },
  {
    "id": "673bd26e94523e5ce86b2cf3",
    "postId": "673bbcdcef018c61223e7ef4",
    "user": {
      "id": "c507f68e-88d8-4e47-9b92-2f7cb17673c7",
      "fullName": "Admin",
      "userName": "admin",
      "email": "admin@gmail.com",
      "roles": [
        "admin"
      ],
      "profilePictureUrl": "https://res.cloudinary.com/dpnh3ytfm/image/upload/v1731844682/anonymous_wgerg5.jpg",
      "profileUrl": null
    },
    "media": [
      {
        "publicId": "rzd17pxpsnz9olwftqdo",
        "url": "https://res.cloudinary.com/dpnh3ytfm/image/upload/v1731973736/rzd17pxpsnz9olwftqdo.jpg",
        "contentType": "image",
        "fileSize": 22186,
        "format": "jpg",
        "duration": null,
        "thumbnailUrl": null,
        "width": 500,
        "height": 333
      },
      {
        "publicId": "nidtdntdjw62skxlmau2",
        "url": "https://res.cloudinary.com/dpnh3ytfm/image/upload/v1731973735/nidtdntdjw62skxlmau2.jpg",
        "contentType": "image",
        "fileSize": 32028,
        "format": "jpg",
        "duration": null,
        "thumbnailUrl": null,
        "width": 500,
        "height": 334
      },
      {
        "publicId": "bj1gvx0s17jffvvfhais",
        "url": "https://res.cloudinary.com/dpnh3ytfm/image/upload/v1731973735/bj1gvx0s17jffvvfhais.jpg",
        "contentType": "image",
        "fileSize": 37916,
        "format": "jpg",
        "duration": null,
        "thumbnailUrl": null,
        "width": 500,
        "height": 334
      },
      {
        "publicId": "kdhzkemoaytlh2ukgi37",
        "url": "https://res.cloudinary.com/dpnh3ytfm/image/upload/v1731973735/kdhzkemoaytlh2ukgi37.jpg",
        "contentType": "image",
        "fileSize": 25445,
        "format": "jpg",
        "duration": null,
        "thumbnailUrl": null,
        "width": 500,
        "height": 333
      }
    ],
    "commentText": "The [JsonPropertyName] attributes will ensure that the JSON properties are correctly mapped to your C# properties, regardless of the casing. Choose either the case-insensitive option or the attribute approach based on your needs:\n\nUse PropertyNameCaseInsensitive = true if you want a quick solution and don't mind case-insensitive matching\nUse [JsonPropertyName] attributes if you want explicit control over property mapping and better performance\n\nWould you like me to explain any part of these solutions in more detail?",
    "likesCount": 0,
    "reactions": [],
    "parentCommentID": null,
    "createdAt": "2024-11-19T06:49:01.4062142+07:00",
    "modifiedAt": null,
    "isDeleted": false,
    "deletedAt": null
  }
]